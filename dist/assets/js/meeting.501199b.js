console.log("Last modification time: 12/14/2018, 4:33:40 PM");
webpackJsonp([1],{"./node_modules/bootstrap/dist/css/bootstrap.min.css":function(e,t){},"./node_modules/toastr/build/toastr.css":function(e,t){},"./src/assets/css/main.css":function(e,t){},"./src/pages/meeting/meeting.css":function(e,t){},"./src/pages/meeting/meeting.js":function(e,t,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var n=s("./node_modules/jquery/dist/jquery.js"),i=s.n(n),a=s("./node_modules/bootstrap/dist/css/bootstrap.min.css"),o=(s.n(a),s("./node_modules/bootstrap/dist/js/bootstrap.js")),r=(s.n(o),s("./src/assets/css/main.css")),l=(s.n(r),s("./src/pages/meeting/meeting.css")),c=(s.n(l),s("./src/utils/utils.js")),d=s("./src/utils/rtcClient.js"),m=s("./src/utils/signalClient.js"),u=s("./static/agora.config.js"),g=s("./src/utils/constants.js");i()(()=>{const e=u.AGORA_APP_ID;let t=c.a.getParameterByName("account"),s=c.a.getParameterByName("channel"),n=c.a.getParameterByName("role"),a=new d.a(e),o=new m.a(e);const r=e=>{let t=i()(".video-container");for(let s=0;s<t.length;s++){let n=i()(t.get(s)),a=n.attr("id");if(!a)continue;let o=a.split("-")[2];0===e.filter(e=>`${e.uid}`===`${o}`).length&&(n.removeAttr("id"),n.html(""))}e.forEach(e=>{let t=`agora-video-${e.uid}`;if(0===i()(`#${t}`).length){let s=(()=>{let e=i()(".video-container");for(let t=0;t<e.length;t++){let s=i()(e.get(t));if(!s.attr("id"))return s}throw new Error("no spare container left")})();s.attr("id",t),"main"===s.attr("dual")?a.setRemoteStreamType(e,g.a.High):a.setRemoteStreamType(e,g.a.Low),e.stream.play(t)}})};a.on("streamlist-update",e=>{r(e)});let l=i()("#chat-input");l.keypress(e=>{if(13==e.which){let t=e.currentTarget.value;i()(e.currentTarget).val(""),o.broadcast(t)}}),i()("#send_btn").click(()=>{let e=l.val();l.val(""),o.broadcast(e)}),o.on("channel-message",({account:e,msg:t})=>{((e,t)=>{i()(".chat-list").append(`<li class="list-group-item">${e} - ${t}</li>`)})(e,t)}),Promise.all([a.init(s,"broadcaster"===n),o.init(t,s,n)])})},"./src/utils/constants.js":function(e,t,s){"use strict";s.d(t,"b",function(){return n}),s.d(t,"a",function(){return i});const n={Local:0,Remote:1},i={High:0,Low:1}},"./src/utils/rtcClient.js":function(e,t,s){"use strict";var n=s("./node_modules/agora-rtc-sdk/AgoraRTCSDK.min.js"),i=s.n(n),a=s("./src/utils/utils.js"),o=s("./node_modules/node-libs-browser/node_modules/events/events.js"),r=(s.n(o),s("./src/utils/constants.js"));class l{constructor(e,t,s){this.stream=e,this.type=t||r.b.Local,this.uid=s}}t.a=class extends o.EventEmitter{constructor(e){super(),this.appid=e,this.rtc=i.a.createClient({mode:"live",codec:"h264"}),this.streams=[],this.uid=null,this.videoProfile="480p_1",this.dynamicKey=null,this.subscribeStreamEvents()}init(e,t){return new Promise(async(s,n)=>{let a=this.appid,o=this.rtc;try{let c=await this.getDynamicKey(e);o.init(a,()=>{o.join(c,e,void 0,e=>{if(!t)return s();let a={streamID:e,audio:!0,video:!0,screen:!1};this.uid=e;let c=i.a.createStream(a);c.setVideoProfile(this.videoProfile),c.init(()=>{this.addStream(new l(c,r.b.Local,e)),o.enableDualStream(()=>{o.publish(c),s()},e=>{n(e)})})},e=>{n(e)})})}catch(e){throw e}})}getDynamicKey(e){return Promise.resolve(void 0)}subscribeStreamEvents(){let e=this.rtc;e.on("stream-added",t=>{let s=t.stream;a.b.log("New stream added: "+s.getId()),a.b.log("Timestamp: "+Date.now()),a.b.log("Subscribe ",s),e.subscribe(s,function(e){a.b.log("Subscribe stream failed",e)})}),e.on("peer-leave",e=>{a.b.log("Peer has left: "+e.uid),a.b.log("Timestamp: "+Date.now()),a.b.log(e),this.removeStream(e.uid)}),e.on("stream-subscribed",e=>{let t=e.stream;a.b.log("Got stream-subscribed event"),a.b.log("Timestamp: "+Date.now()),a.b.log("Subscribe remote stream successfully: "+t.getId()),a.b.log(e);let s=new l(t,r.b.Remote,t.getId());this.addStream(s)}),e.on("stream-removed",e=>{let t=e.stream;a.b.log("Stream removed: "+e.stream.getId()),a.b.log("Timestamp: "+Date.now()),a.b.log(e),this.removeStream(t.getId())}),e.on("stream-published",()=>{this.published=!0,a.b.log("stream published")})}addStream(e){!e instanceof l?console.error("only type of streamWrapper can be added to list"):(this.streams.push(e),this.emit("streamlist-update",this.streams))}removeStream(e){this.streams=this.streams.filter(t=>`${e}`!==`${t.uid}`),this.emit("streamlist-update",this.streams)}setRemoteStreamType(e,t){!e instanceof l?console.error("only type of streamWrapper can be added to list"):this.rtc.setRemoteVideoStreamType(e.stream,t)}}},"./src/utils/signalClient.js":function(e,t,s){"use strict";var n=s("./src/utils/utils.js"),i=s("./node_modules/node-libs-browser/node_modules/events/events.js"),a=(s.n(i),s("./node_modules/agora-signaling-sdk/AgoraSigSDK.min.js")),o=s.n(a);t.a=class extends i.EventEmitter{constructor(e){super(),this.signal=o()(e),this.session=null,this.channel=null}async init(e,t){try{await this.login(e),await this.joinChannel(t),n.b.log("signal initialized")}catch(e){throw e}}login(e){return new Promise((t,s)=>{let n=this.signal.login(e,"_no_need_token");n.onLoginSuccess=(()=>{t()}),n.onLoginFailed=(e=>{s(`login failed: ${e}`)}),this.session=n})}joinChannel(e){return new Promise((t,s)=>{let n=this.session.channelJoin(e);n.onChannelJoined=(()=>{n.onMessageChannelReceive=((e,t,s)=>{this.emit("channel-message",{account:e,msg:s})}),t()}),n.onChannelJoinFailed=(t=>{s(`join channel ${e} failed: ${t}`)}),this.channel=n})}broadcast(e){this.channel.messageChannelSend(e)}}},"./src/utils/utils.js":function(e,t,s){"use strict";s.d(t,"b",function(){return a}),s.d(t,"a",function(){return o});var n=s("./node_modules/toastr/toastr.js"),i=(s.n(n),s("./node_modules/toastr/build/toastr.css"));s.n(i);class a{}a.log=(e=>{console.log(e)});class o{}o.getParameterByName=((e,t)=>{t||(t=window.location.href),e=e.replace(/[[\]]/g,"\\$&");var s=new RegExp("[?&]"+e+"(=([^&#]*)|&|#|$)").exec(t);return s?s[2]?decodeURIComponent(s[2].replace(/\+/g," ")):"":null})},"./static/agora.config.js":function(e,t,s){"use strict"}},["./src/pages/meeting/meeting.js"]);
//# sourceMappingURL=meeting.501199b.js.map